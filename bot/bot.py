from aiogram import Bot, Dispatcher, executor, types
import re
API_TOKEN = '6287877530:AAEGHSuJgsvNzP2p3m6L7LD071p9cBw49hY'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])  # Явно указываем в декораторе, на какую команду реагируем.
async def send_welcome(message: types.Message):
    await message.reply(
        "Привет!\nЯ бот помощник\n" \
        "Для получания информации вы можее воспользоваться командами:\n" \
        "/help - доступные команды\n" \
        "/start - начать сначала\n" \
        "/courses - информация о курсах\n" \
        "/contact - контактная информация\n" \
        "/teacher - информация о педагоге\n" \
        "Или вы можете просто написать сообщение, я вам обязательно отвечу")  # Так как код работает асинхронно, то обязательно пишем await.

@dp.message_handler(commands=['help'])  # Явно указываем в декораторе, на какую команду реагируем.
async def send_welcome(message: types.Message):
    await message.reply(
        "Для получания информации вы можее воспользоваться командами:\n" \
        "/help - доступные команды\n" \
        "/start - начать сначала\n" \
        "/courses - информация о курсах\n" \
        "/contact - контактная информация\n" \
        "/teacher - информация о педагоге\n" \
        "Или вы можете просто написать сообщение, я вам обязательно отвечу")

@dp.message_handler(commands=['courses'])  # Явно указываем в декораторе, на какую команду реагируем.
async def send_welcome(message: types.Message):
    await message.reply(
        "Системное администрирование\n" \
        "Возраст: от 11 до 17 лет\n" \
        "Форма обучения: Бюджет\n" \
        "Длительность программы: 144 часов\n" \
        "Количество занятий в неделю: 4 академических часа в неделю: 2 занятия — по 2 часа (академический час — 45 минут)\n" \
        "-------------------\n" \
        "Кибербезопасность и работа с большими данными\n" \
        "Возраст: от 9 до 13 лет\n" \
        "Форма обучения: Внебюджет\n" \
        "Длительность программы: 36 часов\n" \
        "Количество занятий в неделю: 2 академических часа в неделю. 1 раз — 2 часа (академический час — 45 минут)\n" \
        "-------------------\n" \
        "Разработка сайтов\n" \
        "Возраст: от 13 до 17 лет\n" \
        "Форма обучения: Внебюджет\n" \
        "Длительность программы: 36 часов\n"\
        "Количество занятий в неделю: 2 академических часа в неделю. 1 раз — 2 часа (академический час — 45 минут)")

@dp.message_handler(commands=['contact'])  # Явно указываем в декораторе, на какую команду реагируем.
async def send_welcome(message: types.Message):
    await message.reply(
        "Мальцев Алексей Александрович\n" \
        "Тел.: +7 XXX XXX XX XX\n" \
        "Email: qwerty@qwerty.qwerty\n")

@dp.message_handler(commands=['teacher'])  # Явно указываем в декораторе, на какую команду реагируем.
async def send_welcome(message: types.Message):
    await message.reply(
        "Мальцев Алексей Александрович\n" \
        "Тел.: +7 XXX XXX XX XX\n" \
        "Email: qwerty@qwerty.qwerty\n"\
        "Образование:ГОУ ВПО «Южно-Уральский государственный университет» (СПО), 2010\n" \
        "Повышение квалификации:\n" \
        "2021 г. – Повышение квалификации по программе «Реализации дополнительных общеобразовательных программ технической направленности с использованием оборудования центра цифрового образования «IT-Куб», 36 ч. (ФГАОУ «Академия реализации государственной политики и профессионального развития работников образования Министерства просвещения РФ», г. Москва)\n" \
        "2022 г. – Проходит переподготовку по программам дополнительного профессионального образования – ГБУ ДПО «Челябинский институт переподготовки и повышения квалификации работников образования», наименование программы «Педагогика и методика дополнительного образования»")

@dp.message_handler()  # Создаём новое событие, которое запускается в ответ на любой текст, введённый пользователем.
async def echo(
        message: types.Message):  # Создаём функцию с простой задачей — отправить обратно тот же текст, что ввёл пользователь.
    await message.answer(myReg(message.text))


def myReg(message):
    mes = 'Я не поимаю...'

    match = re.search(r'ко?а?мм?анд.{0,5}', message)
    if (match):
        mes = "Для получания информации вы можее воспользоваться командами:\n" \
        "/help - доступные команды\n" \
        "/start - начать сначала\n" \
        "/courses - информация о курсах\n" \
        "/contact - контактная информация\n" \
        "/teacher - информация о педагоге\n" \
        "Или вы можете просто написать сообщение, я вам обязательно отвечу"

    match = re.search(r'курс', message)
    if (match):
        mes = "Системное администрирование\n" \
        "Возраст: от 11 до 17 лет\n" \
        "Форма обучения: Бюджет\n" \
        "Длительность программы: 144 часов\n" \
        "Количество занятий в неделю: 4 академических часа в неделю: 2 занятия — по 2 часа (академический час — 45 минут)\n" \
        "-------------------\n" \
        "Кибербезопасность и работа с большими данными\n" \
        "Возраст: от 9 до 13 лет\n" \
        "Форма обучения: Внебюджет\n" \
        "Длительность программы: 36 часов\n" \
        "Количество занятий в неделю: 2 академических часа в неделю. 1 раз — 2 часа (академический час — 45 минут)\n" \
        "-------------------\n" \
        "Разработка сайтов\n" \
        "Возраст: от 13 до 17 лет\n" \
        "Форма обучения: Внебюджет\n" \
        "Длительность программы: 36 часов\n"\
        "Количество занятий в неделю: 2 академических часа в неделю. 1 раз — 2 часа (академический час — 45 минут)"

        matchtmp = re.search(r'сис.{0,10}адм', message)
        if (matchtmp):
            mes = "Системное администрирование\n" \
            "Возраст: от 11 до 17 лет\n" \
            "Форма обучения: Бюджет\n" \
            "Длительность программы: 144 часов\n" \
            "Количество занятий в неделю: 4 академических часа в неделю: 2 занятия — по 2 часа (академический час — 45 минут)"

        matchtmp = re.search(r'кибер.{0,10}безоп', message)
        if (matchtmp):
             mes = "Кибербезопасность и работа с большими данными\n" \
            "Возраст: от 9 до 13 лет\n" \
            "Форма обучения: Внебюджет\n" \
            "Длительность программы: 36 часов\n" \
            "Количество занятий в неделю: 2 академических часа в неделю. 1 раз — 2 часа (академический час — 45 минут)"
        matchtmp = re.search(r'(разр|созд).{0,10}сай', message)
        if (matchtmp):
             mes = "Разработка сайтов\n" \
            "Возраст: от 13 до 17 лет\n" \
            "Форма обучения: Внебюджет\n" \
            "Длительность программы: 36 часов\n"\
            "Количество занятий в неделю: 2 академических часа в неделю. 1 раз — 2 часа (академический час — 45 минут)"

    match = re.search(r'контакт.{0,5}(педаг|препод|учит)', message)
    if (match):
        mes = "Мальцев Алексей Александрович\n" \
        "Тел.: +7 XXX XXX XX XX\n" \
        "Email: qwerty@qwerty.qwerty\n"

    match = re.search(r'педаг|препод|учит', message)
    if (match):
        mes = "Мальцев Алексей Александрович\n" \
        "Тел.: +7 XXX XXX XX XX\n" \
        "Email: qwerty@qwerty.qwerty\n"\
        "Образование:ГОУ ВПО «Южно-Уральский государственный университет» (СПО), 2010\n" \
        "Повышение квалификации:\n" \
        "2021 г. – Повышение квалификации по программе «Реализации дополнительных общеобразовательных программ технической направленности с использованием оборудования центра цифрового образования «IT-Куб», 36 ч. (ФГАОУ «Академия реализации государственной политики и профессионального развития работников образования Министерства просвещения РФ», г. Москва)\n" \
        "2022 г. – Проходит переподготовку по программам дополнительного профессионального образования – ГБУ ДПО «Челябинский институт переподготовки и повышения квалификации работников образования», наименование программы «Педагогика и методика дополнительного образования»"

    return mes

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)